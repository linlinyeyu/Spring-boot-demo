# server settings
server.port=8080
management.port=7002

# application settings
app.loginTimeoutSecs=600

# db init settings
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.showSql=${spring.jpa.showSql}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.datasource.initialize=false
spring.datasource.sqlScriptEncoding=UTF-8
flyway.enabled=false


logging.file=${logging.file}
logging.level.org.springframework.web=${logging.level.org.springframework.web}  
#logging.config=logback.xml  
# other settings
spring.main.show-banner=false

# /info endpoint
info.app.name=oms订单管理系统
info.app.version=${project.version}

spring.jpa.database=MYSQL
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=${spring.datasource.url}?autoReconnect=true&autoReconnectForPools=true&characterEncoding=UTF-8
spring.datasource.username=${spring.datasource.username}
spring.datasource.password=${spring.datasource.password}
spring.datasource.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=0)
#连接池启动时的初始值
spring.datasource.initial-size=10
#连接池的最大值
spring.datasource.max-active=100
#最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
spring.datasource.max-idle=8
#最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
spring.datasource.min-idle=50
#给出一条简单的sql语句进行验证
spring.datasource.validation-query=SELECT 1
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
spring.datasource.test-on-borrow=true
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.test-while-idle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程
spring.datasource.time-between-eviction-runs-millis=18800

spring.view.prefix=/WEB-INF/views/
spring.view.suffix=

#spring.freemarker.template-loader-path=/WEB-INF/views/